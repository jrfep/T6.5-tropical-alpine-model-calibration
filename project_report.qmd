---
title: "Tropical Alpine Herbland and Grassland Occurrence and Viability"
author: "J. Maisel"
date: "17 Nov 2023"
format: html
bibliography: 
  - bibTeX/references.bib
nocite: |
  @*
---

## Abstract

In this paper, a subspace of relevant mountain ranges were analysed to find the occurrence of tropical alpine grasslands and herblands (The ecosystem labelled T6.5 from the global ecosystem typology).
Most ranges were not confirmed to have the T6.5 ecosystem present, but did have information regarding the characteristics possessed by T6.5 ecosystems, including vegetation, soil and climate characteristics.
Many of the areas studied showed evidence of human transformation, meaning it is unknown whether they could have a T6.5 ecosystem present. Additionally, the majority of ranges show the presence of other ecosystems within the typology, not necessarily meaning there is not also an area of the range where T6.5 may be found.
The majority of ranges studied have more information present in papers that will require further time spent searching for relevant factors, however many do not have sufficient information present and currently accessible.


## Introduction

A global model to search through 30mx30m grid references, finding the probability of ecosystem presence (from the global ecosystem typology) has been created and as part of calibrating that model, locations must be tested for the presence of expected ecosystems.
This project has focussed on Tropical Alpine Grasslands and Herblands, finding for each location any observations that exist to point towards the presence of these ecosystems, and if not then the possibility for transformation of the given areas.


## Methods


1. A google search was made for context and general papers with accessory info
2. Google scholar searches were made for: 
'[mountain name] Ecosystems' 
'[mountain name] flora and fauna' 
'[mountain name] climate' 

For example:
'High Atlas mountains' 
'Western High Atlas Ecosystems' 
'Western High Atlas flora and fauna' 
'Western High Atlas climate' 

3. The information present for the range was added to the table: 'mountain classification summary', separating into categories

4. Each reference was added to the table: 'references-per-mountain', specifying the region, range, and search term used to find the source


## Results


```{r}
#| echo: false
#| message: false
library(dplyr)
library(readr)
library(DT)
```



This opening table shows the categorised information found for each mountain range, clarifying whether relevant information was found showing either the targeted or other ecosystems, as well as some characteristics of the given ecosystem (vegetation, soil and climate). Also included is information present on transformation, as ecosystem transformation is a regular occurrence, improving search efficiency.

```{r}
mountain_classification <- read_csv("tables/mountain classification summary.csv", show_col_types = FALSE)
datatable(mountain_classification,
          caption = 'Table 1: Categorised relevant information presence for each mountain range researched',
          options = list(pageLength = 15, autoWidth = TRUE))
```


The number of ranges found per region is shown below

```{r}
mountain_classification %>% 
  group_by(Region) %>%
  summarise(`Nr of ranges` = n_distinct(Range)) %>%
  datatable(caption = 'Table 2: Number of ranges found per region',
          options = list(dom = "t"))
```



The information from table 1 has been synthesised below to show the presence of information relating each main ecosystem characteristic for each region.

```{r}
info_perc <- mountain_classification %>% 
  group_by(Region) %>%
  summarise(`Nr of ranges` = n_distinct(Range),
            `Veg info` = sum(if_else(`Info on vegetation` == "Y",1,0)),
            veg_perc = `Veg info`/`Nr of ranges`,
            `soil info` = sum(if_else(`Info on soil` == "Y",1,0)),
            soil_perc = `soil info`/`Nr of ranges`,
            `clim info` = sum(if_else(`Info on climate` == "Y",1,0)),
            clim_perc = `clim info`/`Nr of ranges`,)

  barplot(height=as.matrix(info_perc[,c(4,6,8)]),
          main="Graph 1: Percentage of ranges with information on
                    each key ecosystem characteristic", 
          ylab= "% available",
          beside=TRUE, 
          col=rainbow(5))

  legend(9,1.0, c("Central Plateau (Southern Africa)",
                    "Eastern Arc Mountains",
                    "Maghreb Mountains",
                    "Plateau of Mozambique",
                    "Sahara Ranges"),
       cex=0.6,
       bty="n",
       fill=rainbow(5));

```


The graph below shows the same information as graph 1, however is formatted to highlight the differences in the number of ranges with information on each characteristic

```{r}
info_perc <- mountain_classification %>% 
  group_by(Region) %>%
  summarise(`Nr of ranges` = n_distinct(Range),
            `Veg info` = sum(if_else(`Info on vegetation` == "Y",1,0)),
            veg_perc = `Veg info`/`Nr of ranges`,
            `soil info` = sum(if_else(`Info on soil` == "Y",1,0)),
            soil_perc = `soil info`/`Nr of ranges`,
            `clim info` = sum(if_else(`Info on climate` == "Y",1,0)),
            clim_perc = `clim info`/`Nr of ranges`,)

  barplot(height=as.matrix(info_perc[,c(3,5,7)]),
          main="Graph 2: Number of ranges with information on
                    each key ecosystem characteristic", 
          ylab= "Num found",
          beside=FALSE, 
          col=rainbow(5))
  
  legend(1.3333,29.0, c("Central Plateau (Southern Africa)",
                    "Eastern Arc Mountains",
                    "Maghreb Mountains",
                    "Plateau of Mozambique",
                    "Sahara Ranges"),
       cex=0.6,
       bty="n",
       fill=rainbow(5));

```


We can populate another table with the list of references and we can do similar summaries of nr of references per mountain range:

```{r, warning=FALSE}
mountain_references <- read_csv("tables/references-per-mountain.csv", show_col_types = FALSE)
datatable(mountain_references, caption = 'Table 3: Full list of references')
```


Summarise the number of references per region 

```{r}
mountain_references %>% 
  group_by(Region) %>%
  summarise(`Num references` = n_distinct(comment)) %>%
  datatable(caption = 'Table 4: Number of references per region')
```



Chart of the average number of references found per range for each region

```{r, warning=FALSE, message=FALSE}
reference_density <- mountain_references %>%
  group_by(Region) %>%
  summarise(`Num ranges` = n_distinct(Range),
            `Num references` = n_distinct(comment),
            reference_density = `Num references`/`Num ranges`)


barplot(reference_density$reference_density,
        main="Graph 3: Average number of references per range for
        each region",
        xlab="Region",
        ylab="Average references per range",
        names.arg=reference_density$Region)
```


Chart of average number of references per given search term
```{r, warning=FALSE, message=FALSE}

search_reference_density <- mountain_references %>%
  mutate(climate_term = grepl("climate",search_string),
         ff_term = grepl("flora and fauna",search_string),
         ecosystem_term = grepl("ecosystems",search_string)) %>%
  group_by(climate_term, ff_term, ecosystem_term) %>%
  summarise(`Num references` = n_distinct(comment),
            `Num search` = n_distinct(Range),
            search_reference_density = `Num references`/`Num search`)


barplot(search_reference_density$search_reference_density,
        main="Graph 4: Average number of references found for each
        search term",
        xlab="search term",
        ylab="Num references found",
        names.arg=c("none","eco","ff","clim"))



```


## Time spent by activity

Project setup: 5 hours  
Finding context and information: 20 hours  
Finding relevant references: 70 hours  
Summarising information present for each range by category: 8 hours  
Summarising references found into a table sorted by region, range and search term: 8 hours  
Composing project report: 15 hours  


## Files created

For each mountain range analysed, a folder for the region was created and a markdown file for the given range was created.
Three folders are present:
'East African Highlands', containing a markdown file (eastern_arc_mountains) for the information found on the Eastern Arc Mountains.  
'North African Highlands', containing markdown files (maghreb_mountains and sahara_ranges) for information found on the Maghreb Mountains and Saraha Ranges respectively.
'Southern African Ranges', containing markdown files (central_plateau(southern_africa) and plateau_of_mozambique) for information found on the Central Plateau and Plateau of Mozambique respectively.
An admin folder was created to store research methods and results from discussions related to the project
A bibtex folder was created to store the reference maker in R and the references file linking to the end of this report.
A tables folder was created to store the summary tables synthesising the information found. These tables are called mountain classification summary and references-per-mountain


## Progression and learnings through the project

The start of the term was spent setting up software and learning how to search

- At the beginning, significant context was found and explored for each reference, added to the reference document, with understanding and context prioritised. Each reference took roughly 1 hour to explore fully and gather valuable knowledge from

- Initially BASE, JSTOR, google scholar and CORE were used with various search terms, eventually resulting in the finding that 3 search terms: "[Mountain range] Ecosystems", "[Mountain range] flora and fauna", and "[Mountain range] climate" in google scholar was the most efficient and effective choice within the time constraints of the project.

- This process became progressively efficient and clearer as search terms became familiar, article value become easier to recognise and the decision to separate steps into finding valuable sources and then later filtering those sources to find information within was a huge improvement on efficiency

- Standardising search terms and finding which were most productive was highly valuable

- Standardising the format of documents allowed for far more efficient use later in the project

- By the end of the project sources each took 20 minutes to confirm and include, as this was reduced throughout the project with clarity and familiarity improving

- Adding a document to summarise findings into a table was incredibly valuable (the categories to search for made deciding on article value far more efficient)

- A file to include all references in a table allowed for more effective searches

- Putting together results into a final report, including analysis and summary allowed findings to be clearly shown.

- Cleaning all previous files to standardise results and references found aided clarity

- Setting up a bibliography with all references in bibtex format, most references were added using the biblio creator, however those without easily accessible dois were added with a web reference maker.

## Conclusion


